
using FileIO
using CSV
using DataFrames


function select_and_copy_articles(selection_list, input_dir, output_dir)

    old_filenames = filter(contains(".pdf"), readdir(input_dir))
    selection_filename_diclist = []
    
    for (ps_file_id, selected_article_id) in enumerate(selection_list) 
        @show selected_article_id
        found_selected_file = false
        for temp_old_filename in old_filenames
            
            if startswith(temp_old_filename, string(selected_article_id)*"_#_")
                
                idurn = split(split(temp_old_filename, ".pdf", keepempty=false)[1], "_#_")
                new_filename = string(ps_file_id) * "_PS#_" * idurn[end] * ".pdf"
                
                push!(selection_filename_diclist, [temp_old_filename, new_filename])
                found_selected_file = true
            end
        end
        if !found_selected_file
            print("Error: Didn't find article with old article id =  $selected_article_id")
            sleep(100)
            print("Continuing anyway...")
        end
    end


    #Copy all selected files from input to output folder
    for file in selection_filename_diclist
        old_filename = file[1]
        new_filename = file[2]
        try
            cp(input_dir*old_filename, output_dir*new_filename)
        catch
            infile = input_dir*old_filename
            outfile =  output_dir*new_filename
            println("Could not copy file $infile to $outfile")
        end
    end
end



function main()
    pilot_base_path = "/mnt/s/Sync/University/20212022_EPQS/data_files/national_newspapers_09-21/complete_data/2022_singledout"
    base_path = "/mnt/s/Sync/University/20212022_EPQS/data_files/national_newspapers_09-21"

    pilot_input_dir = pilot_base_path*"/"
    pilot_output_dir = pilot_base_path*"/_2022_postselected/"
    input_dir = base_path*"/complete_data/"
    output_dir = base_path*"/post_selection_data/"
    
    pilot_selection_list = [1 ,2 ,3 ,4 ,6 ,8 ,9 ,10 ,16 ,18 ,19 ,20 ,21 ,22 ,23 ,24 ,25 ,26 ,30 ,31 ,32 ,38 ,39 ,47 ,50 ,51 ,52 ,55 ,60 ,63 ,65 ,66 ,73 ,83 ,87 ,88]
    selection_list = [1 ,3 ,5 ,7 ,17 ,18 ,20 ,21 ,35 ,38 ,40 ,41 ,42 ,43 ,44 ,45 ,49 ,50 ,51 ,52 ,60 ,63 ,65 ,66 ,69 ,73 ,74 ,75 ,76 ,77 ,78 ,79 ,80 ,87 ,88 ,90 ,93 ,94 ,95 ,96 ,98 ,99 ,100 ,101 ,103 ,104 ,106 ,109 ,112 ,113 ,114 ,125 ,128 ,129 ,134 ,136 ,142 ,149 ,150 ,153 ,160 ,163 ,165 ,166 ,167 ,168 ,169 ,173 ,176 ,177 ,185 ,189 ,190 ,193 ,196 ,197 ,199 ,202 ,207 ,209 ,211 ,216 ,218 ,219 ,223 ,228 ,229 ,233 ,234 ,235 ,236 ,237 ,238 ,240 ,242 ,243 ,245 ,246 ,247 ,248 ,249 ,253 ,254 ,255 ,256 ,257 ,263 ,273 ,277 ,278 ,279 ,281 ,282 ,288 ,290 ,291 ,292 ,293 ,302 ,307 ,310 ,313 ,316 ,317 ,318 ,321 ,322 ,325 ,326 ,328 ,331 ,332 ,334 ,336 ,337 ,338 ,339 ,340 ,341 ,346 ,348 ,350 ,351 ,352 ,353 ,355 ,356 ,358 ,360 ,361 ,363 ,371 ,373 ,375 ,383 ,384 ,387 ,390 ,397 ,399 ,401 ,402 ,405 ,408 ,411 ,414 ,415 ,419 ,421 ,424 ,425 ,427 ,428 ,432 ,434 ,435 ,436 ,439 ,440 ,442 ,448 ,449 ,452 ,453 ,455 ,458 ,466 ,469 ,470 ,471 ,475 ,479 ,486 ,487 ,490 ,491 ,492 ,493 ,494 ,496 ,498 ,499 ,500 ,503 ,505 ,506 ,507 ,509 ,510 ,513 ,514 ,523 ,529 ,531 ,536 ,538 ,543 ,544 ,547 ,549 ,550 ,553 ,554 ,555 ,556 ,557 ,558 ,559 ,560 ,561 ,562 ,563 ,565 ,566 ,568 ,569 ,570 ,573 ,574 ,581 ,582 ,585 ,587 ,588 ,592 ,593 ,599 ,600 ,602 ,604 ,606 ,608 ,609 ,611 ,612 ,614 ,615 ,620 ,622 ,625 ,626 ,629 ,632 ,635 ,637 ,645 ,647 ,651 ,652 ,655 ,656 ,657 ,658 ,662 ,665 ,668 ,674 ,675 ,676 ,682 ,683 ,686 ,687 ,688 ,690 ,692 ,695 ,697 ,698 ,699 ,700 ,703 ,706 ,707 ,710 ,711 ,712 ,715 ,716 ,717 ,720 ,721 ,722 ,723 ,726 ,727 ,731 ,736 ,737 ,739 ,740 ,741 ,742 ,743 ,744 ,748 ,755 ,756 ,757 ,758 ,759 ,766 ,768 ,771 ,772 ,773 ,777 ,778 ,779 ,781 ,784 ,785 ,786 ,789 ,794 ,795 ,796 ,797 ,799 ,801 ,802 ,808 ,809 ,810 ,811 ,819 ,820 ,831 ,834 ,837 ,842 ,845 ,846 ,847 ,850 ,851 ,852 ,853 ,855 ,856 ,857 ,860 ,863 ,865 ,867 ,879 ,881 ,882 ,884 ,885 ,886 ,887 ,888 ,889 ,890 ,891 ,900 ,907 ,910 ,913 ,921 ,922 ,923 ,931 ,937 ,938 ,943 ,944 ,945 ,951 ,953 ,957 ,960 ,962 ,963 ,966 ,968 ,969 ,970 ,975 ,987 ,997 ,999 ,1000 ,1002 ,1004 ,1005 ,1006 ,1008 ,1013 ,1014 ,1015 ,1017 ,1018 ,1019 ,1023 ,1024 ,1025 ,1027 ,1029 ,1030 ,1031 ,1032 ,1033 ,1034 ,1036 ,1042 ,1046 ,1047 ,1051 ,1052 ,1054 ,1055 ,1057 ,1063 ,1066 ,1068 ,1070 ,1071 ,1083 ,1085 ,1090 ,1093 ,1098 ,1099 ,1100 ,1101 ,1102 ,1106 ,1111 ,1113 ,1114 ,1129 ,1130 ,1131 ,1133 ,1135 ,1136 ,1138 ,1144 ,1148 ,1149 ,1152 ,1174 ,1180 ,1181 ,1183 ,1184 ,1185 ,1186 ,1194 ,1197 ,1198 ,1199 ,1202 ,1203 ,1208 ,1227 ,1228 ,1236 ,1237 ,1250 ,1253 ,1256 ,1261 ,1276 ,1277 ,1280 ,1283 ,1285 ,1286 ,1291 ,1294 ,1297 ,1298 ,1307 ,1319 ,1324 ,1325 ,1333 ,1340 ,1343 ,1344 ,1351 ,1352 ,1356 ,1361 ,1366 ,1367 ,1368 ,1383 ,1385 ,1390 ,1393 ,1394 ,1396 ,1397 ,1398 ,1400 ,1405 ,1409 ,1410 ,1415 ,1421 ,1429 ,1431 ,1433 ,1435 ,1436 ,1443 ,1446 ,1454 ,1470 ,1481 ,1484 ,1486 ,1508 ,1511 ,1520 ,1523 ,1524 ,1529 ,1538 ,1540 ,1568 ,1570 ,1576 ,1578 ,1579 ,1586 ,1592 ,1605 ,1610 ,1614 ,1623 ,1628 ,1629 ,1631 ,1645 ,1648 ,1657 ,1666 ,1675 ,1682 ,1685 ,1688 ,1691 ,1699 ,1706 ,1708 ,1724 ,1725 ,1747 ,1754 ,1759 ,1762 ,1795 ,1797 ,1798 ,1802 ,1804 ,1821 ,1828 ,1831 ,1839 ,1840 ,1841 ,1847 ,1848 ,1873 ,1878 ,1888 ,1893 ,1895 ,1896 ,1897 ,1898 ,1899 ,1908 ,1912 ,1913 ,1932 ,1938 ,1947 ,1954 ,1962 ,1966 ,1969 ,1971 ,1983 ,1985 ,2011 ,2012 ,2017 ,2018 ,2023 ,2025 ,2026 ,2029 ,2035 ,2040 ,2048 ,2050 ,2055 ,2061 ,2067 ,2072 ,2078 ,2082 ,2100 ,2106 ,2110 ,2114 ,2120 ,2121 ,2123 ,2124 ,2130 ,2135 ,2140 ,2145 ,2159 ,2170 ,2176 ,2188 ,2204 ,2241 ,2252 ,2256 ,2257 ,2258 ,2276 ,2289 ,2291 ,2300 ,2302 ,2305 ,2307 ,2312 ,2326 ,2334 ,2337 ,2345 ,2346 ,2355 ,2360 ,2363 ,2371 ,2372 ,2373 ,2383 ,2402 ,2406 ,2407 ,2408 ,2418 ,2426 ,2429 ,2432 ,2440 ,2441 ,2448 ,2450 ,2456 ,2459 ,2460 ,2463 ,2465 ,2467 ,2469 ,2477 ,2487 ,2490 ,2496 ,2503 ,2512 ,2530 ,2556]

    #select_and_copy_articles( pilot_selection_list, pilot_input_dir, pilot_output_dir)
    select_and_copy_articles(selection_list, input_dir, output_dir)

    println("Succesfully Finished")
end

main()